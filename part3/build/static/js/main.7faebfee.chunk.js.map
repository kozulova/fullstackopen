{"version":3,"sources":["Components/Person.js","Components/Persons.js","Components/PersonForm.js","Components/Filter.js","Components/Notification.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Person","person","deletePerson","className","name","number","onClick","id","Persons","persons","map","PersonForm","props","value","onChange","handleNameChange","handleNumberChange","type","addPerson","Filter","filter","handleFilter","Notification","message","error","baseUrl","axios","get","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setnewNumber","newFilter","setnewFilter","setMessage","setError","useEffect","personService","then","res","data","setTimeout","personsToShow","length","toLowerCase","indexOf","event","target","preventDefault","newPerson","find","window","confirm","console","log","p","alert","concat","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7faebfee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n        <div>\r\n            <li className=\"persons\">{person.name} {person.number}   \r\n            <button onClick={()=>deletePerson(person.id)}>delete</button>\r\n            </li>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, deletePerson}) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person=>\r\n            (\r\n                <Person person={person} deletePerson={deletePerson} key={person.id}/>    \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n         <form>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.handleNameChange}/>\r\n          <br/>\r\n          number: <input value={props.number} onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={props.addPerson}>add</button>\r\n        </div>\r\n      </form>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            <div>filter shown with </div>\r\n            <input type=\"text\" value={props.filter} onChange={props.handleFilter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({message, error}) => {\r\n\r\n    if(message){\r\n        return (\r\n        \r\n            <div className=\"message\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    else if(error){\r\n        return (     \r\n            <div className=\"message error\">\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n  }\r\n\r\n  const deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n  }  \r\n  \r\n  export default { \r\n    getAll: getAll, \r\n    create: create, \r\n    update: update,\r\n    deletePerson: deletePerson \r\n  }","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Persons from './Components/Persons'\nimport PersonForm from './Components/PersonForm'\nimport Filter from './Components/Filter'\nimport Notification from './Components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setnewNumber] = useState('')\n  const [newFilter, setnewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n\n    personService.getAll()\n    .then(res=>{\n      setPersons(res.data)\n    })\n  }, [])\n\n  if(message || error){\n    setTimeout(()=>{\n      setMessage(null)\n      setError(null)\n    }, 3000)\n  } \n\n  const personsToShow = newFilter.length>0 ?\n   persons.filter(person=>person.name.toLowerCase().indexOf(newFilter.toLowerCase())>-1):persons;\n\n  const handleFilter = (event)=>{\n    setnewFilter(event.target.value);\n\n  }\n\n  const handleNumberChange = (event)=>{\n    setnewNumber(event.target.value);\n  }\n  const handleNameChange = (event)=>{\n    setNewName(event.target.value);\n  }\n\n  const addPerson = (event)=>{\n    event.preventDefault();\n    const newPerson = {name: newName, number: newNumber}\n    const person = persons.find(person=>person.name===newName)\n    if(person){\n      const ask = window.confirm(`${newName} is already to phonebook, replace the old number with new one?`)\n      \n      if(ask){\n        console.log(person.id);\n        personService.update(person.id, newPerson)\n        .then(res=>{\n          setPersons(persons.map(p=>p.id!==person.id?p:res.data))\n        })\n      } \n\n    }\n    else if(newName===''||newNumber===''){\n      alert(`Please add name and number`);\n    }\n    else{\n      personService.create(newPerson)\n      .then(res=>{\n        setPersons(persons.concat(res.data));\n        setMessage(`${newName} was added to phonebook`)\n      } )      \n    }  \n    setNewName('');\n    setnewNumber('');\n  }\n\n  const deletePerson = (id)=>{\n    const ask = window.confirm(`Delete ${id}`)\n    if(ask){\n      personService.deletePerson(id)\n      .then(res=>{\n        setPersons(persons.filter(person=>person.id!==id))\n        console.log('deleted', persons)\n      })\n      .catch(err=>{\n        setError(err.message)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n     <Notification message={message} error={error}/>\n      <Filter handleFilter={handleFilter} filter={newFilter}/>\n      <PersonForm addPerson = {addPerson}\n       handleNameChange={handleNameChange}\n       handleNumberChange = {handleNumberChange}\n        name={newName} number={newNumber}/>\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}